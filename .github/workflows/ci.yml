name: CI
on:
  push:
    branches::
      - main
  pull_request:
    branches::
      - main
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  id-token: write # This is required for requesting the JWT
  contents: write # Read is required for actions/checkout and write to create a tag
  actions: write # This is required to create a tag
jobs:
  linting-and-tests:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: abatilo/actions-poetry@v3
      - uses: actions/cache@v4
        name: Setup cache
        with:
          path: ./.venv
          key: poetry-lock-${{ hashFiles('poetry.lock') }}
          # We always set "in-project" in poetry.toml to ensure a local .venv, as
          # we require that for pyright and other pre-commit hooks.
      - name: Install poetry dependencies
        run: poetry install --all-extras --no-interaction
        shell: bash
      - id: ruff_version
        uses: scene-connect/actions/python-package-manager/get_package_version@v5
        with:
          package: ruff
          group: develop
          package-manager: "poetry"
          python-version: "3.12"
      - name: Run pyright
        run: poetry run pyright
        shell: bash
      - uses: chartboost/ruff-action@v1
        with:
          version: ${{ steps.ruff_version.outputs.version }}
      - name: Run pytest
        uses: liskin/gh-problem-matcher-wrap@v3
        env:
          ENVIRONMENT: CI
        with:
          linters: pytest
          run: poetry run python -m pytest
